# -*- coding: utf-8 -*-
"""Feature_Generator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vYFeebDUIMBJmptL_5gEOUoyQI2H9Pza
"""

def save_thres(img_path: str):
     img=cv.imread(img_path)
     w = tf.shape(img)[1]
     a = w // 2
     rgb= img[:, :a, :]
     img_gray=cv.cvtColor(np.float32(rgb), cv.COLOR_BGR2GRAY)     
     blur=cv.GaussianBlur(img_gray,(5,5),0)
     blur=np.array(blur,dtype='uint8')
     otsu_threshold, image_result = cv.threshold(blur, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)
     image = os.path.splitext(img_path)[0]
     feature_path =  image.replace("dj_test", "threshotsu") +'.jpg'
     cv.imwrite(feature_path,image_result)

def save_constr(img_path: str):
     img=cv.imread(img_path)
     w = tf.shape(img)[1]
     a = w // 2
     xp = [0, 64, 128, 192, 255]
     fp = [0, 16, 128, 240, 255]
     x = np.arange(256)
     rgb= img[:, :a, :]
     img_gray=cv.cvtColor(np.float32(rgb), cv.COLOR_BGR2GRAY)
     table = np.interp(x, xp, fp).astype('uint8')
     res= cv.LUT(img_gray, table)  
     im=cv.cvtColor(res, cv.COLOR_GRAY2RGB)
     dst = cv.equalizeHist(img_gray)
     input_image= cv.cvtColor(dst, cv.COLOR_GRAY2RGB)

     plt.imshow(input_image)

def save_lap(img_path: str):
     img=cv.imread(img_path)
     w = tf.shape(img)[1]
     a = w // 2
     k=np.ones((3,3),np.uint8)    
     rgb= img[:, :a, :]
     img_gray=cv.cvtColor(np.float32(rgb), cv.COLOR_BGR2GRAY)
     blur=cv.GaussianBlur(img_gray,(5,5),0)
     lap= cv.Laplacian(blur,cv.CV_64F,ksize=5)
     lap=cv.morphologyEx(lap,cv.MORPH_CLOSE,k)
     dil_l=cv.dilate(lap,k,iterations=4)
     final=cv.erode(dil_l,k,iterations=3) 
     image = os.path.splitext(img_path)[0]
     feature_path =  image.replace("dj_test", "Laplacian") +'.jpg'
     cv.imwrite(feature_path,final)

def save_mask(img_path: str):
     img=cv.imread(img_path)
     w = tf.shape(img)[1]
     a = w // 2
     rgb= img[:, :a, :]
     hsv=cv.cvtColor(np.float32(rgb), cv.COLOR_BGR2HSV)
     l_mask = np.array([0,0,0]) 
     u_mask =  np.array([250,255,80]) 
     mask=cv.inRange(hsv,l_mask,u_mask)
     res=cv.bitwise_and(hsv,hsv,mask=mask)
     fi=cv.cvtColor(res, cv.COLOR_HSV2BGR)
     fin=cv.cvtColor(fi, cv.COLOR_BGR2GRAY)     
     cv.imwrite(feature_path,fin)